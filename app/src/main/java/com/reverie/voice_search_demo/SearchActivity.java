package com.reverie.voice_search_demo;import androidx.annotation.NonNull;import androidx.annotation.Nullable;import androidx.appcompat.app.AppCompatActivity;import androidx.core.app.ActivityCompat;import androidx.core.content.ContextCompat;import android.Manifest;import android.annotation.SuppressLint;import android.content.pm.PackageManager;import android.graphics.drawable.AnimatedImageDrawable;import android.media.MediaPlayer;import android.os.Build;import android.os.Bundle;import android.os.Handler;import android.os.Looper;import android.util.Log;import android.view.View;import android.view.animation.Animation;import android.view.animation.TranslateAnimation;import android.widget.EditText;import android.widget.ImageView;import android.widget.LinearLayout;import android.widget.ProgressBar;import android.widget.RelativeLayout;import android.widget.TextView;import com.rev.voice_search_demo.R;import com.reverie.voice_input.business.StreamingSTT;import com.reverie.voice_input.business.VoiceInputErrorResponseData;import com.reverie.voice_input.business.VoiceInputResultData;import com.reverie.voice_input.business.StreamingSTTResultListener;import com.reverie.voice_input.utilities.constants.Logging;public class SearchActivity extends AppCompatActivity {    ImageView mic_button, cancel, dummy1, dummy2;    RelativeLayout search_layout;    LinearLayout main_layout;    Animation slideUpAnimation;    StreamingSTT streamingSTT;    MediaPlayer mediaPlayer;    boolean isdown = true;    boolean iscancel = false;    TextView output_tv;    ImageView gifImageView;    ProgressBar progressBar;    EditText search_text;    AnimatedImageDrawable animatedImageDrawable = null;    @SuppressLint({"MissingInflatedId", "SetTextI18n"})    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_search);        if (ContextCompat.checkSelfPermission(this, android.Manifest.permission.RECORD_AUDIO) != PackageManager.PERMISSION_GRANTED) {            ActivityCompat.requestPermissions(this, new String[]{Manifest.permission.RECORD_AUDIO}, 100);        }        mic_button = findViewById(R.id.mic_button);        cancel = findViewById(R.id.x_button);        search_layout = findViewById(R.id.bottom_layout);        gifImageView = findViewById(R.id.mic_gif);        gifImageView.setImageResource(R.drawable.mic);        main_layout = findViewById(R.id.main_layout);        output_tv = findViewById(R.id.display_tv);        search_text = findViewById(R.id.search_text);        dummy1 = findViewById(R.id.img1);        dummy2 = findViewById(R.id.img2);        mediaPlayer = new MediaPlayer();        progressBar = findViewById(R.id.progess_bar);        // slideUpAnimation = new TranslateAnimation(0, 0, search_layout.getHeight(), 0);        search_layout.setVisibility(View.INVISIBLE);        gifImageView.setImageResource(R.drawable.mic);        if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.P) {            gifImageView.setImageResource(R.drawable.mic);            animatedImageDrawable = (AnimatedImageDrawable) gifImageView.getDrawable();            animatedImageDrawable.start();        }        mic_button.setOnClickListener(v -> {            if (mediaPlayer.isPlaying()) {                mediaPlayer.stop();            }            mediaPlayer = MediaPlayer.create(SearchActivity.this, R.raw.start_sound);            mediaPlayer.start();            main_layout.setBackgroundResource(R.color.transparent);            slideUp(search_layout);            search_layout.bringToFront();            mic_button.setClickable(false);        });        cancel.setOnClickListener(v -> {            iscancel = true;            main_layout.setBackgroundResource(R.color.white);            //  search_back.setVisibility(View.GONE);            Log.e("Slide_down", "6");            if ((search_layout.getVisibility() == View.VISIBLE))                slideDown(search_layout);            mic_button.setClickable(true);        });        gifImageView.setOnClickListener(v -> streamingSTT.startRecognitions("en", "voice_search", Logging.TRUE));        output_tv.setText("Listening...");        streamingSTT = new StreamingSTT(getApplicationContext(), "", "");        streamingSTT.setStreamingSTTResultListener(new StreamingSTTResultListener() {            @Override            public void onResult(@Nullable VoiceInputResultData voiceInputResultData) {                assert voiceInputResultData != null;                Log.d("Stream_final", voiceInputResultData.getDisplayText());                output_tv.setText(voiceInputResultData.getDisplayText());                if (voiceInputResultData.getFinal()) {                    Log.e("Slide_down", "7");                    if ((search_layout.getVisibility() == View.VISIBLE))                        slideDown(search_layout);                    if (!iscancel) {                        search_text.setText(voiceInputResultData.getDisplayText());                        dummy1.setVisibility(View.GONE);                        dummy2.setVisibility(View.GONE);                        progressBar.setVisibility(View.VISIBLE);                        progressBar.bringToFront();                        Handler handler = new Handler(Looper.getMainLooper());                        Runnable myRunnable = new Runnable() {                            @Override                            public void run() {                                dummy1.setVisibility(View.VISIBLE);                                dummy2.setVisibility(View.VISIBLE);                                progressBar.setVisibility(View.GONE);                            }                        };// Post the runnable with a delay of 2 seconds (2000 milliseconds)                        handler.postDelayed(myRunnable, 2000);                    }                }            }            @Override            public void onError(@NonNull VoiceInputErrorResponseData voiceInputErrorResponseData) {                output_tv.setText(voiceInputErrorResponseData.getError());                Log.d("Stream", voiceInputErrorResponseData.getError());            }            @Override            public void onConnectionSuccess(@NonNull String s) {            }            @Override            public void onRecordingStart(boolean b) {                iscancel = false;                Log.e("Stream_act", "start");                //ifImageView.setBackgroundResource(R.drawable.mic);                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.P) {                    // gifImageView.setImageResource(R.drawable.mic);                    animatedImageDrawable.start();                }                gifImageView.setClickable(false);            }            @Override            public void onRecordingEnd(boolean b) {                Log.e("Stream_act", "stop");                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.P) {                    animatedImageDrawable.stop();                }                main_layout.setBackgroundResource(R.color.white);                gifImageView.setClickable(true);                //gifImageView.setImageResource(R.drawable.mic);                mediaPlayer = MediaPlayer.create(SearchActivity.this, R.raw.end_sound);                mediaPlayer.start();                mic_button.setClickable(true);            }            @Override            public void onRecordingData(@NonNull byte[] bytes, int i) {            }        });    }    public void slideUp(View view) {        isdown = false;        view.setVisibility(View.VISIBLE);        TranslateAnimation animate = new TranslateAnimation(                0,                 // fromXDelta                0,                 // toXDelta                view.getHeight(),  // fromYDelta                0);                // toYDelta        animate.setDuration(200);        animate.setFillAfter(true);        view.startAnimation(animate);        animate.setAnimationListener(new Animation.AnimationListener() {            @Override            public void onAnimationStart(Animation animation) {            }            @Override            public void onAnimationEnd(Animation animation) {                streamingSTT.startRecognitions("en", "voice_search",Logging.TRUE);            }            @Override            public void onAnimationRepeat(Animation animation) {            }        });    }    public void slideDown(View view) {        if (isdown)            return;//        Log.e("Slide_down","5");        TranslateAnimation animate = new TranslateAnimation(                0,                 // fromXDelta                0,                 // DoXDelta                0,                 // fromYDelta                view.getHeight()); // toYDelta        animate.setDuration(500);        animate.setFillAfter(true);        view.startAnimation(animate);        streamingSTT.stopRecognitions();        isdown = true;        animate.setAnimationListener(new Animation.AnimationListener() {            @Override            public void onAnimationStart(Animation animation) {            }            @SuppressLint("SetTextI18n")            @Override            public void onAnimationEnd(Animation animation) {                output_tv.setText("Listening...");            }            @Override            public void onAnimationRepeat(Animation animation) {            }        });    }}